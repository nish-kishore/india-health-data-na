state <- c(Sm = 500000,
Im = 500000,
Rm = 0,
Sf = 500000,
If = 500000,
Rf = 0)
years <- c(1:100)
out <- lsoda(y = state, times = years, func = hw1.1, parms = parameters)
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
scale_color_discrete()
years <- c(1:200)
out <- lsoda(y = state, times = years, func = hw1.1, parms = parameters)
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
scale_color_discrete()
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
theme_classic() +
scale_color_discrete()
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
theme_classic() +
scale_color_discrete("Pop Type")
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
theme_classic() +
scale_color_discrete("Pop Type",
levels = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
theme_classic() +
scale_color_discrete("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
theme_classic() +
scale_color_discrete("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_discrete("Pop Type",
values = c(1,1,1,2,2,2),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
theme_classic() +
scale_color_discrete("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c(1,1,1,2,2,2),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type)) +
geom_line() +
theme_classic() +
scale_color_discrete("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line() +
theme_classic() +
scale_color_discrete("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, color=type, type=type)) +
geom_line() +
theme_classic() +
scale_color_discrete("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line() +
theme_classic() +
scale_color_manual("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type)) +
theme_classic() +
scale_color_discrete("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type)) +
theme_classic() +
scale_color_discrete("Pop Type",
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type)) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#7fc97f","#beaed4","#fdc086","#7fc97f","#beaed4","#fdc086"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type)) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#1b9e77","#d95f02","#7570b3","#1b9e77","#d95f02","#7570b3"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type)) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#1b9e77","#d95f02","#7570b3","#1b9e77","#d95f02","#7570b3"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))+
xlab("Years") + ylab("Population Count") + ggtitle("Population Dynamics for HW1-Q1")
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type, size=2)) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#1b9e77","#d95f02","#7570b3","#1b9e77","#d95f02","#7570b3"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))+
xlab("Years") + ylab("Population Count") + ggtitle("Population Dynamics for HW1-Q1")
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type, size=1.5)) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#1b9e77","#d95f02","#7570b3","#1b9e77","#d95f02","#7570b3"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))+
xlab("Years") + ylab("Population Count") + ggtitle("Population Dynamics for HW1-Q1")
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type, size=1.1)) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#1b9e77","#d95f02","#7570b3","#1b9e77","#d95f02","#7570b3"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))+
xlab("Years") + ylab("Population Count") + ggtitle("Population Dynamics for HW1-Q1")
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type),size=1.1) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#1b9e77","#d95f02","#7570b3","#1b9e77","#d95f02","#7570b3"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))+
xlab("Years") + ylab("Population Count") + ggtitle("Population Dynamics for HW1-Q1")
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type),size=1.05) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#1b9e77","#d95f02","#7570b3","#1b9e77","#d95f02","#7570b3"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))+
xlab("Years") + ylab("Population Count") + ggtitle("Population Dynamics for HW1-Q1")
library(deSolve)
library(tidyverse)
parameters <- c(new = 10000/1,
old = log(2)/30,
rec = 1/2,
inf_f = 0.2,
inf_m = 0.05)
state <- c(Sm = 500000,
Im = 500000,
Rm = 0,
Sf = 500000,
If = 500000,
Rf = 0)
hw1.1<-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
dSm <- new - old*Sm - (If/(Sf+If+Rf))*inf_m*Sm
dIm <- (If/(Sf+If+Rf))*inf_m*Sm - old*Im - rec*Im
dRm <- rec*Im - old*Rm
dSf <- new - old*Sf - (Im/(Sm+Im+Rm))*inf_f*Sf
dIf <- (Im/(Sm+Im+Rm))*inf_f*Sf - old*If - rec*If
dRf <- rec*If - old*Rf
# return the rate of change
list(c(dSm,dIm,dRm,dSf,dIf,dRf))
}) # end with(as.list ...
}
years <- c(1:200)
out <- lsoda(y = state, times = years, func = hw1.1, parms = parameters)
gather(as.data.frame(out), type, pop, Sm:Rf, factor_key = T) %>%
ggplot(aes(x=time, y=pop, group=type)) +
geom_line(aes(linetype=type, color=type),size=1.05) +
theme_classic() +
scale_color_manual("Pop Type",
values = c("#1b9e77","#d95f02","#7570b3","#1b9e77","#d95f02","#7570b3"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem")) +
scale_linetype_manual("Pop Type",
values = c("solid","solid","solid","dashed","dashed","dashed"),
breaks = c("Sm","Im","Rm","Sf","If","Rf"),
labels = c("S-Male","I-Male","R-Male","S-Fem","I-Fem","R-Fem"))+
xlab("Years") + ylab("Population Count") + ggtitle("Population Dynamics for HW1-Q1")
head(out)
r0 <- matrix(data=c(2,3,.5,1), nrow=2,ncol=2, byrow=FALSE)
a <- c(0,1)# current number of cases in two groups (child,adult)
b <- a #running total in each generation
r0
for (i in (1:3)){
a <- r0%*%a
b <- cbind(b,a)
}
a
b
r0
z <- (1:7)/7
plot(b[1,],b[2,], type="o", col=gray((1:7)/14),xlab="child", ylab="adult")
b
n <- colSums(b) #total number infected each generation
n
prop.table(b,margin=2)
eigen(r0)
0.7*(70/30,067
)
0.7*(70/30067)
(70*0.7 + 29997*0.03)
948.91/30067
0.001629694/0.03155985
sample(10, 1)
sample(10, 300)
sample(10, 3)
library(swirl)
install.packages("swirl")
library(swirl)
swirl::install_course_github("lucymli","mcmc-infectious-disease-epi")
library(swirl)
swirl()
plot_data()
open_mcmc_file()
skip()
skip()
skip()
load("C://Users/nishk/Google Drive/HSPH/CCDD/PR Mortality/Analytic Pipeline/rafa/rdas/tables.rda")
unique(households$municipio)
unique(households$municipio) %>% as.data.frame()
library(magrittr)
unique(households$municipio) %>% as.data.frame()
library(shiny); source('C:/Users/nishk/Downloads/muxViz-master/muxVizGUI.R')
install.packages("shiny")
library(shiny)
library(ShinyDash)
library(shinydashboard)
#uncomment the line below for detailed log of your session. Can be useful for debug purposes
#options(shiny.trace=TRUE)
enableBookmarking(store = "server")
runApp(getwd())
library(tidyverse)
library(magrittr)
#load data
source("./code/init.R")
#load data
source("./init.R")
getwd()
library(shiny)
library(ShinyDash)
library(shinydashboard)
library(RColorBrewer)
#uncomment the line below for detailed log of your session. Can be useful for debug purposes
#options(shiny.trace=TRUE)
enableBookmarking(store = "server")
runApp(getwd())
if(version$major<3 || (version$major==3 && version$minor<2.0)){
stop(paste("WARNING! muxViz requires R 3.2.x or higher in order to work properly. \nPlease update your R framework.\n"))
}
if(!require(devtools)){
install.packages("devtools")
}
if(!require(shiny)){
install.packages("shiny")
library(devtools)
devtools::install_github("trestletech/ShinyDash")
devtools::install_github("rstudio/shiny-incubator")
}else{
#check the version, and in case update to the latest one
if(packageDescription("shiny")$Version!="1.0.3"){
install.packages("shiny")
#library(devtools)
#devtools::install_github("rstudio/shiny")
}
}
if(!require(shinyjs)){
install.packages("shinyjs")
}
if(!require(shinydashboard)){
install.packages("shinydashboard")
}
if(!require(markdown)){
install.packages("markdown")
}
if(!require(session)){
install.packages("session")
}
if(!require(d3heatmap)){
devtools::install_github("rstudio/d3heatmap")
}
if(!require(ggplot2)){
install.packages("ggplot2")
}
if(!require(rCharts)){
install_github('ramnathv/rCharts')
}
if(!require(RColorBrewer)){
install.packages("RColorBrewer")
}
if(!require(colourpicker)){
install.packages("colourpicker")
#devtools::install_github("daattali/colourpicker")
}
if(!require(colorspace)){
install.packages("colorspace")
}
if(!require(digest)){
install.packages("digest")
}
if(!require(googleVis)){
install.packages("googleVis")
}
if(!require(gplots)){
install.packages("gplots")
}
if(!require(rgl)){
install.packages("rgl")
}
if(!require(igraph)){
install.packages("igraph")
}
if(!require(mapproj)){
install.packages("mapproj")
}
if(!require(rgdal)){
install.packages("rgdal")
}
if(!require(OpenStreetMap)){
install.packages("OpenStreetMap")
}
if(!require(fields)){
install.packages("fields")
}
if(!require(clue)){
install.packages("clue")
}
if(!require(d3Network)){
install.packages("d3Network")
}
if(!require(Matrix)){
install.packages("Matrix")
}
if(!require(networkD3)){
install.packages("networkD3")
}
if(!require(dplyr)){
install.packages("dplyr")
}
if(!require(RSpectra)){
install.packages("RSpectra")
}
library(shiny)
library(ShinyDash)
library(shinydashboard)
library(RColorBrewer)
install.packages("shiny")
enableBookmarking(store = "server")
runApp(getwd())
getwd
getwd()
x <- 5/6
x
x-x^2-x^3-x^4
x+x^2+x^3+x^4
x-x^2-x^3-x^4
(x-x^2-x^3-x^4)*(1/6)
(x-x^2-x^3-x^4)*(1/6)*-1
1/6
1-(1/6)+((x-x^2-x^3-x^4)*(1/6)*-1)
a
a <- 1/6
1-a-(x*a)-(x^2*a)-(x^3*a)-(x^4*a)
x <- c(1,2,7,8,14,20)
sample(x,length(x),replace = T)
mean(sample(x,length(x),replace = T))
replicate(mean(sample(x,length(x),replace = T)),100)
replicate(100,mean(sample(x,length(x),replace = T)))
replicate(1000,mean(sample(x,length(x),replace = T)))
replicate(10000,mean(sample(x,length(x),replace = T)))
replicate(10000,mean(sample(x,length(x),replace = T))) %>% hist
hist(replicate(10000,mean(sample(x,length(x),replace = T))))
p <- 1/5
q <- 1-p
choose(10,1)
choose(10,0)
1-(choose(10,1)*p^1*q^9)-(choose(10,0)*p^0*q^10)
choose(10,0)
p^0
q^10
0.6241904/0.1073742
1-0.1073742
0.6241904/0.8926258
choose(30,1)
n <- 3
(n choose (n:1))
choose(n, (n:1))
n <- 10
choose(n, (n:1))
choose(302)
choose(30,2)
0.32*2
0.32*2/(0.32*2+0.68)
0!
factorial(0)
0^3
0^3
0^0
library(magrittr)
library(igraph)
library(HiveR)
setwd("C:/Users/nishk/gitrepos/hsph/india-healthd-data-na/code/")
#load data
source("./init.R")
edge_list <- read.csv("../data/proc/edge_list.csv", header=F)
final <- readRDS("../data/proc/final.RDS")
final_graph <- graph.adjacency(final, weighted = T)
final_layer <-  as.numeric(substr(V(final_graph)$name, 7,7))
substr(V(final_graph)$name,1,5) %>%
as.data.frame() %>%
merge(key1, by.x=".",by.y="id") %>%
{.$label} -> V(final_graph)$name
final_layout <- layout_with_sugiyama(final_graph, layers=final_layer)
plot(final_graph,
layout=cbind(final_layer,final_layout$layout[,1]),
vertex.shape=c("square","circle","square","circle",
"square","circle","square","circle")[final_layer],
vertex.label.degree=0)
